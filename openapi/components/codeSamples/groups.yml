index:
  - lang: cURL
    source: |
      curl --request GET \
        --url {{API_BASE_URL}}/groups.json \
        --header 'Authorization: Bearer {{JWT_TOKEN}}'
  - lang: JavaScript
    source: |
      const url = '{{API_BASE_URL}}/groups.json';
      const options = {method: 'GET', headers: {Authorization: 'Bearer {{JWT_TOKEN}}'}};

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        console.log(data);
      } catch (error) {
        console.error(error);
      }
  - lang: PHP
    source: |
      <?php
      $curl = curl_init();

      curl_setopt_array($curl, [
        CURLOPT_URL => "{{API_BASE_URL}}/groups.json",
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_ENCODING => "",
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_TIMEOUT => 30,
        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
        CURLOPT_CUSTOMREQUEST => "GET",
        CURLOPT_HTTPHEADER => [
          "Authorization: Bearer {{JWT_TOKEN}}"
        ],
      ]);

      $response = curl_exec($curl);
      $err = curl_error($curl);

      curl_close($curl);

      if ($err) {
        echo "cURL Error #:" . $err;
      } else {
        echo $response;
      }

view:
  - lang: cURL
    source: |
      curl --request GET \
        --url {{API_BASE_URL}}/groups/8a3c5c4e-e931-4e6b-854a-9b2e9afcd3bc.json \
        --header 'Authorization: Bearer {{JWT_TOKEN}}'
  - lang: JavaScript
    source: |
      const url = '{{API_BASE_URL}}/groups/8a3c5c4e-e931-4e6b-854a-9b2e9afcd3bc.json';
      const options = {method: 'GET', headers: {Authorization: 'Bearer {{JWT_TOKEN}}'}};

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        console.log(data);
      } catch (error) {
        console.error(error);
      }
  - lang: PHP
    source: |
      <?php
      $curl = curl_init();

      curl_setopt_array($curl, [
        CURLOPT_URL => "{{API_BASE_URL}}/groups/8a3c5c4e-e931-4e6b-854a-9b2e9afcd3bc.json",
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_ENCODING => "",
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_TIMEOUT => 30,
        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
        CURLOPT_CUSTOMREQUEST => "GET",
        CURLOPT_HTTPHEADER => [
          "Authorization: Bearer {{JWT_TOKEN}}"
        ],
      ]);

      $response = curl_exec($curl);
      $err = curl_error($curl);

      curl_close($curl);

      if ($err) {
        echo "cURL Error #:" . $err;
      } else {
        echo $response;
      }

add:
  - lang: cURL
    source: |
      curl --request POST \
        --url {{API_BASE_URL}}/groups.json \
        --header 'Authorization: Bearer {{JWT_TOKEN}}' \
        --data '{
        "name": "Groupe B",
        "groups_users": [
          {
            "user_id": "8bb80df5-700c-48ce-b568-85a60fc3c8f2",
            "is_admin": true
          }]
        }'
  - lang: JavaScript
    source: |
      const url = '{{API_BASE_URL}}/groups.json';
      const options = {
        method: 'POST',
        headers: {Authorization: 'Bearer {{JWT_TOKEN}}'},
        body: '{"name":"Groupe B","groups_users":[{"user_id":"8bb80df5-700c-48ce-b568-85a60fc3c8f2","is_admin":true}]}'
      };

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        console.log(data);
      } catch (error) {
        console.error(error);
      }
  - lang: PHP
    source: |
      <?php
      $curl = curl_init();

      curl_setopt_array($curl, [
        CURLOPT_URL => "{{API_BASE_URL}}/groups.json",
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_ENCODING => "",
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_TIMEOUT => 30,
        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
        CURLOPT_CUSTOMREQUEST => "POST",
        CURLOPT_POSTFIELDS => json_encode([
          'name' => 'Groupe B',
          'groups_users' => [
            [
              'user_id' => '8bb80df5-700c-48ce-b568-85a60fc3c8f2',
              'is_admin' => null
            ]
          ]
        ]),
        CURLOPT_HTTPHEADER => [
          "Authorization: Bearer {{JWT_TOKEN}}"
        ],
      ]);

      $response = curl_exec($curl);
      $err = curl_error($curl);

      curl_close($curl);

      if ($err) {
        echo "cURL Error #:" . $err;
      } else {
        echo $response;
      }

delete:
  - lang: cURL
    source: |
      curl --request DELETE \
        --url {{API_BASE_URL}}/groups/164d51b8-d6ce-4d59-b8a0-43869919407e.json \
        --header 'Authorization: Bearer {{JWT_TOKEN}}'
  - lang: JavaScript
    source: |
      const url = '{{API_BASE_URL}}/groups/164d51b8-d6ce-4d59-b8a0-43869919407e.json';
      const options = {method: 'DELETE', headers: {Authorization: 'Bearer {{JWT_TOKEN}}'}};

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        console.log(data);
      } catch (error) {
        console.error(error);
      }
  - lang: PHP
    source: |
      <?php
      $curl = curl_init();

      curl_setopt_array($curl, [
        CURLOPT_URL => "{{API_BASE_URL}}/groups/164d51b8-d6ce-4d59-b8a0-43869919407e.json",
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_ENCODING => "",
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_TIMEOUT => 30,
        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
        CURLOPT_CUSTOMREQUEST => "DELETE",
        CURLOPT_HTTPHEADER => [
          "Authorization: Bearer {{JWT_TOKEN}}"
        ],
      ]);

      $response = curl_exec($curl);
      $err = curl_error($curl);

      curl_close($curl);

      if ($err) {
        echo "cURL Error #:" . $err;
      } else {
        echo $response;
      }

update:
  - lang: cURL
    source: |
      curl --request PUT \
      --url https://passbolt.localhost/groups/8fa37ef6-f167-4342-8e1c-3488439cf7d1.json \
      --header 'Authorization: Bearer {{JWT_TOKEN}}' \
      --data '{
        "name": "WRC",
        "groups_users": [
          {
            "user_id": "8bb80df5-700c-48ce-b568-85a60fc3c8f2",
            "is_admin": true
          }
        ]
      }'
  - lang: JavaScript
    source: |
      const url = 'https://passbolt.localhost/groups/8fa37ef6-f167-4342-8e1c-3488439cf7d1.json';
      const options = {
        method: 'PUT',
        headers: {Authorization: 'Bearer {{JWT_TOKEN}}'},
        body: '{"name":"WRC","groups_users":[{"user_id":"8bb80df5-700c-48ce-b568-85a60fc3c8f2","is_admin":true}]}'
      };

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        console.log(data);
      } catch (error) {
        console.error(error);
      }
  - lang: PHP
    source: |
      <?php
      $curl = curl_init();

      curl_setopt_array($curl, [
        CURLOPT_URL => "https://passbolt.localhost/groups/8fa37ef6-f167-4342-8e1c-3488439cf7d1.json",
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_ENCODING => "",
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_TIMEOUT => 30,
        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
        CURLOPT_CUSTOMREQUEST => "PUT",
        CURLOPT_POSTFIELDS => json_encode([
          'name' => 'WRC',
          'groups_users' => [
            [
              'user_id' => '8bb80df5-700c-48ce-b568-85a60fc3c8f2',
              'is_admin' => null
            ]
          ]
        ]),
        CURLOPT_HTTPHEADER => [
          "Authorization: Bearer {{JWT_TOKEN}}"
        ],
      ]);

      $response = curl_exec($curl);
      $err = curl_error($curl);

      curl_close($curl);

      if ($err) {
        echo "cURL Error #:" . $err;
      } else {
        echo $response;
      }
