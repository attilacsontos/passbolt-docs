updateSessionKey:
    - lang: cURL
      source: |
        curl --request POST \
        --url {{API_BASE_URL}}/metadata/session-keys/1771fe31-2702-427d-9c03-640711c00c71.json \
        --header 'Authorization: Bearer {{JWT_TOKEN}}' \
        --header 'Content-Type: application/json' \
        --data '{
          "data": "-----BEGIN PGP MESSAGE-----",
          "modified": "2025-02-18T15:52:17+00:00",
        }'
    - lang: JavaScript
      source: |
        const url = '{{API_BASE_URL}}/metadata/session-keys/1771fe31-2702-427d-9c03-640711c00c71.json';
        const options = {
          method: 'PUT',
          headers: {Authorization: 'Bearer {{JWT_TOKEN}}'},
          body: '{"data": "-----BEGIN PGP MESSAGE-----", "modified": "2025-02-18T15:52:17+00:00"}'
        };

        try {
          const response = await fetch(url, options);
          const data = await response.json();
          console.log(data);
        } catch (error) {
          console.error(error);
        }
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, [
          CURLOPT_URL => "{{API_BASE_URL}}/metadata/session-keys/1771fe31-2702-427d-9c03-640711c00c71.json",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "PUT",
          CURLOPT_POSTFIELDS => json_encode([
            'data' => '-----BEGIN PGP MESSAGE-----',
            'modified' => '2025-02-18T15:52:17+00:00',
          ]),
          CURLOPT_HTTPHEADER => [
            "Authorization: Bearer {{JWT_TOKEN}}"
          ],
        ]);

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);

        if ($err) {
          echo "cURL Error #:" . $err;
        } else {
          echo $response;
        }

delete:
  - lang: cURL
    source: |
      curl --request DELETE \
        --url {{API_BASE_URL}}/metadata/session-keys/9edeffa4-a4fb-4e6a-b5f8-1ffc3f408335.json \
        --header 'Authorization: Bearer {{JWT_TOKEN}}'
  - lang: JavaScript
    source: |
      const url = '{{API_BASE_URL}}/metadata/session-keys/9edeffa4-a4fb-4e6a-b5f8-1ffc3f408335.json';
      const options = {method: 'DELETE', headers: {Authorization: 'Bearer {{JWT_TOKEN}}'}};

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        console.log(data);
      } catch (error) {
        console.error(error);
      }
  - lang: PHP
    source: |
      <?php
      $curl = curl_init();

      curl_setopt_array($curl, [
        CURLOPT_URL => "{{API_BASE_URL}}/metadata/session-keys/9edeffa4-a4fb-4e6a-b5f8-1ffc3f408335.json",
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_ENCODING => "",
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_TIMEOUT => 30,
        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
        CURLOPT_CUSTOMREQUEST => "DELETE",
        CURLOPT_HTTPHEADER => [
          "Authorization: Bearer {{JWT_TOKEN}}"
        ],
      ]);

      $response = curl_exec($curl);
      $err = curl_error($curl);

      curl_close($curl);

      if ($err) {
        echo "cURL Error #:" . $err;
      } else {
        echo $response;
      }

index:
  - lang: cURL
    source: |
      curl --request GET \
        --url {{API_BASE_URL}}/metadata/session-keys.json \
        --header 'authorization: Bearer {{JWT_TOKEN}}'
  - lang: JavaScript
    source: |
      const url = '{{API_BASE_URL}}/metadata/session-keys.json';
      const options = {method: 'GET', headers: {authorization: 'Bearer {{JWT_TOKEN}}'}};

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        console.log(data);
      } catch (error) {
        console.error(error);
      }
  - lang: PHP
    source: |
      <?php

      $curl = curl_init();

      curl_setopt_array($curl, [
        CURLOPT_URL => "{{API_BASE_URL}}/metadata/session-keys.json",
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_ENCODING => "",
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_TIMEOUT => 30,
        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
        CURLOPT_CUSTOMREQUEST => "GET",
        CURLOPT_HTTPHEADER => [
          "authorization: Bearer {{JWT_TOKEN}}"
        ],
      ]);

      $response = curl_exec($curl);
      $err = curl_error($curl);

      curl_close($curl);

      if ($err) {
        echo "cURL Error #:" . $err;
      } else {
        echo $response;
      }
