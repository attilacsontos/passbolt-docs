verify:
  - lang: cURL
    source: |
      curl --request GET \
        --url {{API_BASE_URL}}/auth/verify.json
  - lang: JavaScript
    source: |
      const url = '{{API_BASE_URL}}/auth/verify.json';
      const options = {method: 'GET'};

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        console.log(data);
      } catch (error) {
        console.error(error);
      }
  - lang: PHP
    source: |
      <?php
      $curl = curl_init();

      curl_setopt_array($curl, [
        CURLOPT_URL => "{{API_BASE_URL}}/auth/verify.json",
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_ENCODING => "",
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_TIMEOUT => 30,
        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
        CURLOPT_CUSTOMREQUEST => "GET",
      ]);

      $response = curl_exec($curl);
      $err = curl_error($curl);

      curl_close($curl);

      if ($err) {
        echo "cURL Error #:" . $err;
      } else {
        echo $response;
      }

stage0:
  - lang: cURL
    source: |
      curl --request POST \
        --url {{API_BASE_URL}}/auth/verify.json \
        --data '{
        "data": {
          "gpg_auth": {
            "keyid": "5FB36DE5C8E69DD4DB185DF2BC9F2749E432CB59",
            "server_verify_token": "-----BEGIN PGP MESSAGE-----"
          }
        }
      }'
  - lang: JavaScript
    source: |
      const url = '{{API_BASE_URL}}/auth/verify.json';
      const options = {
        method: 'POST',
        body: '{"data":{"gpg_auth":{"keyid":"5FB36DE5C8E69DD4DB185DF2BC9F2749E432CB59","server_verify_token":"-----BEGIN PGP MESSAGE-----"}}}'
      };

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        console.log(data);
      } catch (error) {
        console.error(error);
      }
  - lang: PHP
    source: |
      <?php
      $curl = curl_init();

      curl_setopt_array($curl, [
        CURLOPT_URL => "{{API_BASE_URL}}/auth/verify.json",
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_ENCODING => "",
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_TIMEOUT => 30,
        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
        CURLOPT_CUSTOMREQUEST => "POST",
        CURLOPT_POSTFIELDS => json_encode([
          'data' => [
            'gpg_auth' => [
              'keyid' => '5FB36DE5C8E69DD4DB185DF2BC9F2749E432CB59',
              'server_verify_token' => '-----BEGIN PGP MESSAGE-----'
            ]
          ]
        ]),
      ]);

      $response = curl_exec($curl);
      $err = curl_error($curl);

      curl_close($curl);

      if ($err) {
        echo "cURL Error #:" . $err;
      } else {
        echo $response;
      }

login:
  - lang: cURL
    source: |
      curl --request POST \
        --url {{API_BASE_URL}}/auth/login.json \
        --data '{
        "data": {
          "gpg_auth": {
            "keyid": "5FB36DE5C8E69DD4DB185DF2BC9F2749E432CB59",
            "user_token_result": "gpgauthv1.3.0|36|10e2074b-f610-42be-8525-100d4e68c481|gpgauthv1.3.0"
          }
        }
      }'
  - lang: JavaScript
    source: |
      const url = '{{API_BASE_URL}}/auth/login.json';
      const options = {
        method: 'POST',
        body: '{"data":{"gpg_auth":{"keyid":"5FB36DE5C8E69DD4DB185DF2BC9F2749E432CB59","user_token_result":"gpgauthv1.3.0|36|10e2074b-f610-42be-8525-100d4e68c481|gpgauthv1.3.0"}}}'
      };

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        console.log(data);
      } catch (error) {
        console.error(error);
      }
  - lang: PHP
    source: |
      <?php
      $curl = curl_init();

      curl_setopt_array($curl, [
        CURLOPT_URL => "{{API_BASE_URL}}/auth/login.json",
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_ENCODING => "",
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_TIMEOUT => 30,
        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
        CURLOPT_CUSTOMREQUEST => "POST",
        CURLOPT_POSTFIELDS => json_encode([
          'data' => [
            'gpg_auth' => [
              'keyid' => '5FB36DE5C8E69DD4DB185DF2BC9F2749E432CB59',
              'user_token_result' => 'gpgauthv1.3.0|36|10e2074b-f610-42be-8525-100d4e68c481|gpgauthv1.3.0'
            ]
          ]
        ]),
      ]);

      $response = curl_exec($curl);
      $err = curl_error($curl);

      curl_close($curl);

      if ($err) {
        echo "cURL Error #:" . $err;
      } else {
        echo $response;
      }

logout:
  - lang: cURL
    source: |
      curl --request GET \
        --url {{API_BASE_URL}}/auth/logout.json
  - lang: JavaScript
    source: |
      const url = '{{API_BASE_URL}}/auth/logout.json';
      const options = {method: 'POST'};

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        console.log(data);
      } catch (error) {
        console.error(error);
      }
  - lang: PHP
    source: |
      <?php
      $curl = curl_init();

      curl_setopt_array($curl, [
        CURLOPT_URL => "{{API_BASE_URL}}/auth/logout.json",
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_ENCODING => "",
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_TIMEOUT => 30,
        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
        CURLOPT_CUSTOMREQUEST => "POST",
      ]);

      $response = curl_exec($curl);
      $err = curl_error($curl);

      curl_close($curl);

      if ($err) {
        echo "cURL Error #:" . $err;
      } else {
        echo $response;
      }

isAuthenticated:
  - lang: cURL
    source: |
      curl --request GET \
        --url {{API_BASE_URL}}/auth/is-authenticated.json \
        --header 'Authorization: Bearer {{JWT_TOKEN}}'
  - lang: JavaScript
    source: |
      const url = '{{API_BASE_URL}}/auth/is-authenticated.json';
      const options = {method: 'GET', headers: {Authorization: 'Bearer {{JWT_TOKEN}}'}};

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        console.log(data);
      } catch (error) {
        console.error(error);
      }
  - lang: PHP
    source: |
      <?php
      $curl = curl_init();

      curl_setopt_array($curl, [
        CURLOPT_URL => "{{API_BASE_URL}}/auth/is-authenticated.json",
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_ENCODING => "",
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_TIMEOUT => 30,
        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
        CURLOPT_CUSTOMREQUEST => "GET",
        CURLOPT_HTTPHEADER => [
          "Authorization: Bearer {{JWT_TOKEN}}"
        ],
      ]);

      $response = curl_exec($curl);
      $err = curl_error($curl);

      curl_close($curl);

      if ($err) {
        echo "cURL Error #:" . $err;
      } else {
        echo $response;
      }
